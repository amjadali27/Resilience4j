# Port on which we will access server
server.port= 8090

# RateLimiter configurations
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-for-period=2
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-refresh-period=5s
resilience4j.ratelimiter.instances.getMessageRateLimit.timeout-duration=0

# Retry Configurations
resilience4j.retry.instances.checkMessageRetry.max-attempts=5
resilience4j.retry.instances.checkMessageRetry.wait-duration =2s
resilience4j.retry.instances.checkMessageRetry.retry-exceptions=org.springframework.web.client.ResourceAccessException

# CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.getDepartment.failure-rate-threshold=80
resilience4j.circuitbreaker.instances.getDepartment.sliding-window-size=10
resilience4j.circuitbreaker.instances.getDepartment.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.getDepartment.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.getDepartment.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.getDepartment.permitted-number-of-calls-in-half-open-state=4
resilience4j.circuitbreaker.instances.getDepartment.wait-duration-in-open-state=1s

# Bulkhead Configuration
resilience4j.bulkhead.instances.getMessageBH.max-concurrent-calls=5
resilience4j.bulkhead.instances.getMessageBH.max-wait-duration=0


# TimeLimiting Configuration
resilience4j.timelimiter.instances.getMessageTL.timeout-duration=1s
resilience4j.timelimiter.instances.getMessageTL.cancel-running-future=false